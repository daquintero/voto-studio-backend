# Generated by Django 2.1.7 on 2019-02-19 16:36

import django.contrib.postgres.fields.jsonb
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
import voto_studio_backend.changes.models
import voto_studio_backend.forms.models
import voto_studio_backend.search.models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('media', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='Achievement',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('permissions_dict', django.contrib.postgres.fields.jsonb.JSONField(blank=True, default=dict)),
                ('date_created', models.DateTimeField(default=django.utils.timezone.now, verbose_name='Date of Creation')),
                ('tracked', models.BooleanField(default=True, verbose_name='Tracked')),
                ('source', models.URLField(blank=True, max_length=2048, null=True, verbose_name='Source')),
                ('date', models.DateTimeField(blank=True, null=True)),
                ('statistics', django.contrib.postgres.fields.jsonb.JSONField(blank=True, default=list, null=True, verbose_name='Statistics')),
                ('location_id_name', models.CharField(blank=True, max_length=32, null=True, verbose_name='Location Identifier Name')),
                ('location_id', models.CharField(blank=True, max_length=32, null=True, verbose_name='Location Identifier')),
                ('rels_dict', django.contrib.postgres.fields.jsonb.JSONField(blank=True, default=dict, verbose_name='Relationships Dictionary')),
                ('order', django.contrib.postgres.fields.jsonb.JSONField(blank=True, default=voto_studio_backend.changes.models.get_order_default, verbose_name='Media Content Order')),
                ('brief_description', models.CharField(blank=True, max_length=140, null=True, verbose_name='Description')),
                ('type', models.CharField(blank=True, choices=[('1', 'Economy'), ('2', 'Agriculture'), ('3', 'Employment'), ('4', 'Transport'), ('5', 'Energy'), ('6', 'Waste Management'), ('7', 'Indigenous Relations'), ('8', 'Health Services'), ('9', 'Pensions'), ('10', 'Security'), ('11', 'Emergency Services'), ('12', 'Education'), ('13', 'Poverty'), ('14', 'Business'), ('15', 'Industry'), ('16', 'Entertainment'), ('17', 'None')], max_length=128, null=True, verbose_name='Type')),
            ],
            options={
                'abstract': False,
            },
            bases=(models.Model, voto_studio_backend.forms.models.InfoMixin, voto_studio_backend.search.models.IndexingMixin),
        ),
        migrations.CreateModel(
            name='Controversy',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('permissions_dict', django.contrib.postgres.fields.jsonb.JSONField(blank=True, default=dict)),
                ('date_created', models.DateTimeField(default=django.utils.timezone.now, verbose_name='Date of Creation')),
                ('tracked', models.BooleanField(default=True, verbose_name='Tracked')),
                ('source', models.URLField(blank=True, max_length=2048, null=True, verbose_name='Source')),
                ('date', models.DateTimeField(blank=True, null=True)),
                ('statistics', django.contrib.postgres.fields.jsonb.JSONField(blank=True, default=list, null=True, verbose_name='Statistics')),
                ('location_id_name', models.CharField(blank=True, max_length=32, null=True, verbose_name='Location Identifier Name')),
                ('location_id', models.CharField(blank=True, max_length=32, null=True, verbose_name='Location Identifier')),
                ('rels_dict', django.contrib.postgres.fields.jsonb.JSONField(blank=True, default=dict, verbose_name='Relationships Dictionary')),
                ('order', django.contrib.postgres.fields.jsonb.JSONField(blank=True, default=voto_studio_backend.changes.models.get_order_default, verbose_name='Media Content Order')),
                ('brief_description', models.CharField(blank=True, max_length=2048, null=True, verbose_name='Description')),
                ('type', models.CharField(blank=True, choices=[('1', 'Economy'), ('2', 'Agriculture'), ('3', 'Employment'), ('4', 'Transport'), ('5', 'Energy'), ('6', 'Waste Management'), ('7', 'Indigenous Relations'), ('8', 'Health Services'), ('9', 'Pensions'), ('10', 'Security'), ('11', 'Emergency Services'), ('12', 'Education'), ('13', 'Poverty'), ('14', 'Business'), ('15', 'Industry'), ('16', 'Entertainment'), ('17', 'None')], max_length=128, null=True, verbose_name='Type')),
            ],
            options={
                'verbose_name_plural': 'Controversies',
            },
            bases=(models.Model, voto_studio_backend.forms.models.InfoMixin, voto_studio_backend.search.models.IndexingMixin),
        ),
        migrations.CreateModel(
            name='ElectoralPeriod',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('permissions_dict', django.contrib.postgres.fields.jsonb.JSONField(blank=True, default=dict)),
                ('date_created', models.DateTimeField(default=django.utils.timezone.now, verbose_name='Date of Creation')),
                ('tracked', models.BooleanField(default=True, verbose_name='Tracked')),
                ('source', models.URLField(blank=True, max_length=2048, null=True, verbose_name='Source')),
                ('date', models.DateTimeField(blank=True, null=True)),
                ('statistics', django.contrib.postgres.fields.jsonb.JSONField(blank=True, default=list, null=True, verbose_name='Statistics')),
                ('location_id_name', models.CharField(blank=True, max_length=32, null=True, verbose_name='Location Identifier Name')),
                ('location_id', models.CharField(blank=True, max_length=32, null=True, verbose_name='Location Identifier')),
                ('rels_dict', django.contrib.postgres.fields.jsonb.JSONField(blank=True, default=dict, verbose_name='Relationships Dictionary')),
                ('order', django.contrib.postgres.fields.jsonb.JSONField(blank=True, default=voto_studio_backend.changes.models.get_order_default, verbose_name='Media Content Order')),
                ('brief_description', models.CharField(blank=True, max_length=140, null=True, verbose_name='Description')),
                ('long_description', models.TextField(blank=True, default='<p></p>', verbose_name='Long Description')),
                ('period', models.CharField(blank=True, choices=[('1419', '2014-2019'), ('0914', '2009-2014'), ('0409', '2004-2009'), ('9904', '1999-2004'), ('9499', '1994-1999')], max_length=128, null=True, verbose_name='Period')),
                ('position', models.CharField(blank=True, choices=[('1', 'Presidente'), ('2', 'Diputado'), ('3', 'Representante'), ('4', 'Alcalde'), ('5', 'Gobernador')], max_length=128, null=True, verbose_name='Position')),
                ('attendance_percentage', models.FloatField(blank=True, default=float, null=True, verbose_name='Attendance Percentage')),
                ('published_public_finances', models.BooleanField(default=False, verbose_name='Published Public Finances')),
            ],
            options={
                'abstract': False,
            },
            bases=(models.Model, voto_studio_backend.forms.models.InfoMixin, voto_studio_backend.search.models.IndexingMixin),
        ),
        migrations.CreateModel(
            name='Individual',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('permissions_dict', django.contrib.postgres.fields.jsonb.JSONField(blank=True, default=dict)),
                ('date_created', models.DateTimeField(default=django.utils.timezone.now, verbose_name='Date of Creation')),
                ('tracked', models.BooleanField(default=True, verbose_name='Tracked')),
                ('source', models.URLField(blank=True, max_length=2048, null=True, verbose_name='Source')),
                ('date', models.DateTimeField(blank=True, null=True)),
                ('statistics', django.contrib.postgres.fields.jsonb.JSONField(blank=True, default=list, null=True, verbose_name='Statistics')),
                ('location_id_name', models.CharField(blank=True, max_length=32, null=True, verbose_name='Location Identifier Name')),
                ('location_id', models.CharField(blank=True, max_length=32, null=True, verbose_name='Location Identifier')),
                ('rels_dict', django.contrib.postgres.fields.jsonb.JSONField(blank=True, default=dict, verbose_name='Relationships Dictionary')),
                ('order', django.contrib.postgres.fields.jsonb.JSONField(blank=True, default=voto_studio_backend.changes.models.get_order_default, verbose_name='Media Content Order')),
                ('name', models.CharField(default=str, max_length=128, verbose_name='Name')),
                ('alias', models.CharField(default=str, max_length=64, verbose_name='Alias')),
                ('brief_description', models.CharField(blank=True, max_length=140, null=True, verbose_name='Description')),
                ('long_description', models.TextField(blank=True, default='<p></p>', verbose_name='Long Description')),
                ('email', models.CharField(default=str, max_length=64, verbose_name='Email Address')),
                ('phone_number', models.CharField(default=str, max_length=64, verbose_name='Phone Number')),
                ('website', models.URLField(blank=True, max_length=2048, null=True, verbose_name='Website')),
                ('twitter_username', models.CharField(default=str, max_length=15, verbose_name='Twitter Username')),
                ('facebook_username', models.CharField(default=str, max_length=128, verbose_name='Facebook Username')),
                ('type', models.CharField(blank=True, choices=[('1', 'Politician'), ('2', 'Business person'), ('3', 'Civilian')], max_length=128, null=True, verbose_name='Type')),
                ('corruption_related_funds', models.FloatField(blank=True, default=float, null=True)),
                ('non_corruption_related_funds', models.FloatField(blank=True, default=float, null=True)),
            ],
            options={
                'abstract': False,
            },
            bases=(models.Model, voto_studio_backend.forms.models.InfoMixin, voto_studio_backend.search.models.IndexingMixin),
        ),
        migrations.CreateModel(
            name='Law',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('permissions_dict', django.contrib.postgres.fields.jsonb.JSONField(blank=True, default=dict)),
                ('date_created', models.DateTimeField(default=django.utils.timezone.now, verbose_name='Date of Creation')),
                ('tracked', models.BooleanField(default=True, verbose_name='Tracked')),
                ('source', models.URLField(blank=True, max_length=2048, null=True, verbose_name='Source')),
                ('date', models.DateTimeField(blank=True, null=True)),
                ('statistics', django.contrib.postgres.fields.jsonb.JSONField(blank=True, default=list, null=True, verbose_name='Statistics')),
                ('location_id_name', models.CharField(blank=True, max_length=32, null=True, verbose_name='Location Identifier Name')),
                ('location_id', models.CharField(blank=True, max_length=32, null=True, verbose_name='Location Identifier')),
                ('rels_dict', django.contrib.postgres.fields.jsonb.JSONField(blank=True, default=dict, verbose_name='Relationships Dictionary')),
                ('order', django.contrib.postgres.fields.jsonb.JSONField(blank=True, default=voto_studio_backend.changes.models.get_order_default, verbose_name='Media Content Order')),
                ('code', models.CharField(blank=True, max_length=128, null=True, verbose_name='Law Code')),
                ('brief_description', models.CharField(blank=True, max_length=128, null=True, verbose_name='Description')),
                ('long_description', models.TextField(blank=True, default='<p></p>', verbose_name='Long Description')),
                ('category', models.CharField(blank=True, choices=[('1', 'Economy'), ('2', 'Agriculture'), ('3', 'Employment'), ('4', 'Transport'), ('5', 'Energy'), ('6', 'Waste Management'), ('7', 'Indigenous Relations'), ('8', 'Health Services'), ('9', 'Pensions'), ('10', 'Security'), ('11', 'Emergency Services'), ('12', 'Education'), ('13', 'Poverty'), ('14', 'Business'), ('15', 'Industry'), ('16', 'Entertainment'), ('17', 'None')], max_length=140, null=True, verbose_name='Category')),
            ],
            options={
                'abstract': False,
            },
            bases=(models.Model, voto_studio_backend.forms.models.InfoMixin, voto_studio_backend.search.models.IndexingMixin),
        ),
        migrations.CreateModel(
            name='Organization',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('permissions_dict', django.contrib.postgres.fields.jsonb.JSONField(blank=True, default=dict)),
                ('date_created', models.DateTimeField(default=django.utils.timezone.now, verbose_name='Date of Creation')),
                ('tracked', models.BooleanField(default=True, verbose_name='Tracked')),
                ('source', models.URLField(blank=True, max_length=2048, null=True, verbose_name='Source')),
                ('date', models.DateTimeField(blank=True, null=True)),
                ('statistics', django.contrib.postgres.fields.jsonb.JSONField(blank=True, default=list, null=True, verbose_name='Statistics')),
                ('location_id_name', models.CharField(blank=True, max_length=32, null=True, verbose_name='Location Identifier Name')),
                ('location_id', models.CharField(blank=True, max_length=32, null=True, verbose_name='Location Identifier')),
                ('rels_dict', django.contrib.postgres.fields.jsonb.JSONField(blank=True, default=dict, verbose_name='Relationships Dictionary')),
                ('order', django.contrib.postgres.fields.jsonb.JSONField(blank=True, default=voto_studio_backend.changes.models.get_order_default, verbose_name='Media Content Order')),
                ('name', models.CharField(default=str, max_length=2048, verbose_name='Name')),
                ('brief_description', models.CharField(blank=True, max_length=140, null=True, verbose_name='Description')),
                ('long_description', models.TextField(blank=True, default='<p></p>', verbose_name='Long Description')),
                ('email', models.CharField(default=str, max_length=64, verbose_name='Email Address')),
                ('phone_number', models.CharField(default=str, max_length=64, verbose_name='Phone Number')),
                ('website', models.URLField(blank=True, max_length=2048, null=True, verbose_name='Website')),
                ('twitter_username', models.CharField(default=str, max_length=15, verbose_name='Twitter Username')),
                ('facebook_username', models.CharField(default=str, max_length=128, verbose_name='Facebook Username')),
                ('type', models.CharField(blank=True, choices=[('1', 'Governmental'), ('2', 'Political Party'), ('3', 'Company')], max_length=128, null=True, verbose_name='Type')),
                ('corruption_related_funds', models.FloatField(blank=True, default=float, null=True)),
                ('non_corruption_related_funds', models.FloatField(blank=True, default=float, null=True)),
            ],
            options={
                'abstract': False,
            },
            bases=(models.Model, voto_studio_backend.forms.models.InfoMixin, voto_studio_backend.search.models.IndexingMixin),
        ),
        migrations.CreateModel(
            name='Promise',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('permissions_dict', django.contrib.postgres.fields.jsonb.JSONField(blank=True, default=dict)),
                ('date_created', models.DateTimeField(default=django.utils.timezone.now, verbose_name='Date of Creation')),
                ('tracked', models.BooleanField(default=True, verbose_name='Tracked')),
                ('source', models.URLField(blank=True, max_length=2048, null=True, verbose_name='Source')),
                ('date', models.DateTimeField(blank=True, null=True)),
                ('statistics', django.contrib.postgres.fields.jsonb.JSONField(blank=True, default=list, null=True, verbose_name='Statistics')),
                ('location_id_name', models.CharField(blank=True, max_length=32, null=True, verbose_name='Location Identifier Name')),
                ('location_id', models.CharField(blank=True, max_length=32, null=True, verbose_name='Location Identifier')),
                ('rels_dict', django.contrib.postgres.fields.jsonb.JSONField(blank=True, default=dict, verbose_name='Relationships Dictionary')),
                ('order', django.contrib.postgres.fields.jsonb.JSONField(blank=True, default=voto_studio_backend.changes.models.get_order_default, verbose_name='Media Content Order')),
                ('brief_description', models.CharField(blank=True, max_length=140, null=True, verbose_name='Description')),
                ('type', models.CharField(blank=True, choices=[('1', 'Economy'), ('2', 'Agriculture'), ('3', 'Employment'), ('4', 'Transport'), ('5', 'Energy'), ('6', 'Waste Management'), ('7', 'Indigenous Relations'), ('8', 'Health Services'), ('9', 'Pensions'), ('10', 'Security'), ('11', 'Emergency Services'), ('12', 'Education'), ('13', 'Poverty'), ('14', 'Business'), ('15', 'Industry'), ('16', 'Entertainment'), ('17', 'None')], max_length=128, null=True, verbose_name='Type')),
                ('fulfilled', models.BooleanField(default=False)),
                ('images', models.ManyToManyField(blank=True, to='media.Image')),
                ('individual', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='political.Individual')),
            ],
            options={
                'abstract': False,
            },
            bases=(models.Model, voto_studio_backend.forms.models.InfoMixin, voto_studio_backend.search.models.IndexingMixin),
        ),
    ]
